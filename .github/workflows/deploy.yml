name: Documentation du projet

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
      ports:
        - '3308:3306'
      environment:
        MYSQL_DATABASE: ${{ MYSQL_DATABASE }}
        MYSQL_USER: $ {{MYSQL_USER}}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
          options: 
            --health-cmd="pg_isready"
            --health-interval=10s
            --health-timeout=5s
            --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, intl, pdo, pdo_pgsql
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_ENV

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Set up database
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          php bin/console doctrine:database:create --if-not-exists --env=test

      - name: Execute migrations
        run: php bin/console doctrine:migrations:migrate --no-interaction --env=test

      - name: Run tests
        run: ./vendor/bin/phpunit

  deploy:
    runs-on: ubuntu-latest
    needs: test

    services:
      mysql:
        image: mysql:8.0
      ports:
        - '3308:3306'
      environment:
        MYSQL_DATABASE: ${MYSQL_DB}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      options: 
        --health-cmd="pg_isready"
        --health-interval=10s
        --health-timeout=5s
        --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: mbstring, intl, pdo, pdo_pgsql
          coverage: none

      - name: Install dependencies
        env:
          APP_ENV: prod
        run: composer install --no-dev --optimize-autoloader

      - name: Set up database
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          php bin/console doctrine:database:create --if-not-exists --env=prod

      - name: Execute migrations
        run: php bin/console doctrine:migrations:migrate --no-interaction --env=prod

      - name: Deploy to production
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
          APP_ENV: prod
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          rsync -avz --exclude='/.git/' -e "ssh -i private_key" ./ $REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH
          ssh -i private_key $REMOTE_USER@$REMOTE_HOST "cd $REMOTE_PATH && composer install --no-dev --optimize-autoloader && php bin/console cache:clear --env=prod && php bin/console doctrine:migrations:migrate --no-interaction --env=prod"
          rm private_key
